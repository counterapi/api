# Default values for counterapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

configMapName: ""

database:
  name: ""
  user: ""
  password: ""
  host: ""
  port: 5432

image:
  repository: ghcr.io/counterapi/api
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  className: ""
  annotations: {}
#     kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: api.counterapi.dev
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     cpu: 500m
     memory: 512Mi
   requests:
     cpu: 100m
     memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

externalSecret:
    enabled: false
    secretStore:
      name: aws-parameter-store
      kind: ClusterSecretStore
    remoteRef:
      key: /k8s/shared/database

redis:
  enabled: true
  replicaCount: 1
  image:
    repository: redis
    pullPolicy: Always
    tag: "8.0.1-alpine"

  service:
    type: ClusterIP
    port: 6379

metrics:
  authentication:
    enabled: true
    username: "admin"
    password: "admin"